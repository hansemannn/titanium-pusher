/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.pusher;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.json.JSONObject;

import com.pusher.client.channel.PrivateChannel;
import com.pusher.client.channel.PrivateChannelEventListener;
import com.pusher.client.channel.PusherEvent;

import java.util.HashMap;
import java.util.Map;

@Kroll.proxy(creatableInModule=TitaniumPusherModule.class)
public class TiPusherChannelProxy extends KrollProxy
{
	// Standard Debugging variables
	private static final String LCAT = "ChannelProxy";
	private static final boolean DBG = TiConfig.LOGD;

	private PrivateChannel channel;

	// Methods

	@Kroll.method
	public void bind(String eventName) {
		channel.bind(eventName, new PrivateChannelEventListener() {
			@Override
			public void onEvent(PusherEvent event) {
				KrollDict dict = new KrollDict();
				dict.put("rawData", event.getData());
				fireEvent("data", dict);
			}

			@Override
			public void onError(String message, Exception e) {
				PrivateChannelEventListener.super.onError(message, e);
				Log.e(LCAT, "General Error:" + e);
			}

			@Override
            public void onSubscriptionSucceeded(String channelName) {
                Log.d(LCAT, "Subscription succeeded from channel: " + channelName);
            }

            @Override
            public void onAuthenticationFailure(String s, Exception e) {
				Log.e(LCAT, "Authentication failure: " + e);
            }
        });
	}

    @Kroll.method
    public void trigger(String eventName, Object data) {
	    if (eventName == null || !(data instanceof Map)) {
	        Log.e(LCAT, "Malformed arguments");
        }
	    channel.trigger(eventName, new JSONObject((HashMap) data).toString());
    }

    @Kroll.method
	public void unbindAll()
	{
        // TODO: Not implemented, yet!
	}

	protected void setChannel(PrivateChannel channel) {
		this.channel = channel;
	}

	protected PrivateChannel getChannel() {
		return this.channel;
	}
}
